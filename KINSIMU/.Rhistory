STR18=c(28,29,30,30.2,31,31.2,32,32.2,33,33.2,34.2,35.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR19=c(10,11,12,12.3,13,13.3,14,14.3,15,15.3,16,16.3,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR20=c(17,18,19,20,21,22,23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR21=c(9,9.1,10,10.1,11,11.3,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR22=c(14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR23=c(13,14,15,16,17,18,19,20,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR24=c(9,10,11,12,13,14,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR25=c(7,9,10,11,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR26=c(10,11,12,13,14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR27=c(8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR28=c(9,10,11,12,13,14,15,17,18,19,20,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR29=c(10,11.2,12,13,14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR30=c(18,19,20,21,22,23,24,25,26,27,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR31=c(18,19,20,21,22,23,24,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR32=c(8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR33=c(17,18,19,20,21,22,23,24,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR34=c(8,10,11,12,13,14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR35=c(14,15,16,17,17.3,18,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR36=c(19,20,21,21.2,22,22.2,23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR37=c(15,16,17,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR38=c(8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR39=c(5,9,10,11,12,13,14,15,15.2,16,17,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,0,0),
STR40=c(6,7,8,9,9.3,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR41=c(8,9,10,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR42=c(14,15,16,17,18,19,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
use_data(af,an)
use_data(af,an,overwrite = TRUE)
document()
#' @docType data
#' @name af
#' @title Example of af matrix
#' @description Example of matrix containing allele frequency data on 42 autosomal STR markers
#' @format A data frame with 28 rows and 42 variables
af<-data.frame(STR1=c(0.1121,0.2931,0.1638,0.3362,0.0776,0.0086,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR2=c(0.0776,0.3707,0.1983,0.2414,0.0862,0.0259,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR3=c(0.0086,0.0259,0.2414,0.3017,0.2672,0.1207,0.0259,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR4=c(0.0086,0.0086,0.0259,0.0086,0.0086,0.0086,0.0172,0.1121,0.0345,0.0948,0.0345,0.0086,0.1466,0.0086,
0.0086,0.0086,0.1552,0.0086,0.1552,0.0086,0.0776,0.0345,0.0172,0,0,0,0,0),
STR5=c(0.1034,0.0086,0.0517,0.181,0.0172,0.0259,0.0259,0.0948,0.0086,0.0172,0.1293,0.0086,0.0603,0.0086,
0.0086,0.0172,0.0517,0.069,0.0086,0.0086,0.0086,0.0172,0.0172,0.0086,0.0086,0.0086,0.0172,0.0086),
STR6=c(0.2759,0.0086,0.0259,0.1207,0.0345,0.069,0.0086,0.0086,0.0345,0.1897,0.0259,0.0345,0.1293,0.0086,
0.0086,0.0172,0,0,0,0,0,0,0,0,0,0,0,0),
STR7=c(0.0086,0.0086,0.0086,0.1552,0.1034,0.0086,0.1724,0.1034,0.1552,0.0086,0.0086,0.0345,0.0862,0.0431,
0.0086,0.0603,0.0086,0.0086,0.0086,0,0,0,0,0,0,0,0,0),
STR8=c(0.0345,0.181,0.0086,0.0862,0.2241,0.2759,0.1293,0.0603,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR9=c(0.0086,0.0259,0.1293,0.2241,0.1207,0.0172,0.0259,0.1552,0.2155,0.069,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR10=c(0.25,0.181,0.2155,0.2241,0.1034,0.0259,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR11=c(0.0345,0.0345,0.0259,0.0086,0.0172,0.0086,0.2586,0.0086,0.0086,0.2328,0.0086,0.0517,0.1466,0.0431,
0.0603,0.0172,0.0259,0.0086,0,0,0,0,0,0,0,0,0,0),
STR12=c(0.0345,0.2155,0.2241,0.1379,0.1466,0.0603,0.0603,0.0517,0.0172,0.0259,0.0086,0.0172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR13=c(0.2845,0.0517,0.0259,0.0948,0.1897,0.2586,0.0948,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR14=c(0.2069,0.0862,0.0086,0.0086,0.1034,0.2759,0.2328,0.0603,0.0172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR15=c(0.0531,0.0087,0.2511,0.0531,0.1845,0.1634,0.0715,0.1712,0.0174,0.0087,0.0087,0.0087,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR16=c(0.0431,0.0086,0.0172,0.0345,0.0776,0.0603,0.0345,0.319,0.2586,0.0172,0.0086,0.0431,0.069,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR17=c(0.0259,0.1983,0.0517,0.0603,0.0776,0.2155,0.1207,0.1293,0.0345,0.0603,0.0259,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR18=c(0.0172,0.0086,0.0172,0.0691,0.0172,0.0259,0.0862,0.0776,0.0431,0.1553,0.0345,0.0086,0.069,0.0086,0.0086,0.0086,
0.069,0.0863,0.0086,0.0431,0.069,0.0086,0.0431,0.0086,0.0086,0,0,0),
STR19=c(0.3793,0.0517,0.0517,0.1121,0.0862,0.0259,0.1638,0.0086,0.0862,0.0086,0.0086,0.0086,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR20=c(0.0862,0.0086,0.0259,0.0517,0.0086,0.1293,0.069,0.0431,0.0086,0.0086,0.0086,0.0086,0.0172,0.0086,0.0345,0.0086,0.0086,0.0259,
0.2155,0.0086,0.0086,0.1293,0.0172,0.0259,0.0259,0.0086,0,0),
STR21=c(0.0086,0.0086,0.1466,0.1293,0.0086,0.3707,0.0086,0.0259,0.0086,0.1897,0.0172,0.069,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR22=c(0.0345,0.3793,0.0086,0.2328,0.0948,0.1207,0.0517,0.0172,0.0603,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR23=c(0.0086,0.1034,0.0086,0.0603,0.1293,0.0603,0.2414,0.1034,0.0862,0.0948,0.0345,0.0345,0.0086,0.0172,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR24=c(0.3621,0.0259,0.0517,0.0862,0.2155,0.181,0.0603,0.0172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR25=c(0.0086,0.3621,0.0086,0.0259,0.3276,0.0948,0.0948,0.069,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR26=c(0.0086,0.2845,0.1983,0.0603,0.0086,0.0603,0.2759,0.0086,0.0776,0.0086,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR27=c(0.0086,0.0431,0.2328,0.3448,0.1897,0.1724,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR28=c(0.0086,0.0172,0.0862,0.1638,0.0776,0.1293,0.0259,0.0431,0.2759,0.1293,0.0345,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR29=c(0.0259,0.0086,0.069,0.1983,0.1207,0.0603,0.2845,0.2155,0.0086,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR30=c(0.0086,0.0431,0.0345,0.0086,0.0086,0.0603,0.0776,0.0172,0.0603,0.0776,0.0431,0.0259,0.069,0.0086,0.0345,0.0172,
0.0431,0.0603,0.0086,0.1293,0.0603,0.0086,0.0259,0.0086,0.0345,0.0086,0.0086,0.0086),
STR31=c(0.069,0.0086,0.0086,0.069,0.1293,0.0086,0.0517,0.0259,0.0259,0.0259,0.0345,0.0086,0.0086,0.0086,0.1552,
0.0086,0.0086,0.069,0.1552,0.0086,0.0431,0.069,0,0,0,0,0,0),
STR32=c(0.1552,0.0431,0.1724,0.3362,0.0172,0.2069,0.0517,0.0172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR33=c(0.0086,0.0862,0.0086,0.1983,0.0086,0.1897,0.0086,0.0086,0.0259,0.0086,0.069,0.0086,0.0431,0.0172,
0.0086,0.0172,0.0431,0.0172,0.0431,0.0172,0.0086,0.0345,0.0345,0.0431,0.0086,0.0086,0.0172,0.0086),
STR34=c(0.0086,0.0948,0.0345,0.0603,0.0862,0.1638,0.0862,0.0086,0.0948,0.0172,0.069,0.0172,0.0086,0.1293,
0.0086,0.0948,0.0086,0.0086,0,0,0,0,0,0,0,0,0,0),
STR35=c(0.1207,0.1466,0.0345,0.1638,0.1121,0.0172,0.2328,0.0259,0.1379,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR36=c(0.0259,0.0517,0.1379,0.0086,0.1552,0.0172,0.2155,0.2586,0.0862,0.0431,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR37=c(0.0172,0.0862,0.0259,0.0345,0.0517,0.0431,0.0259,0.0086,0.0086,0.0086,0.0086,0.0086,0.0086,0.0172,0.0086,
0.0345,0.0603,0.0172,0.3362,0.0172,0.1638,0.0086,0,0,0,0,0,0),
STR38=c(0.0517,0.3362,0.1121,0.1121,0.2155,0.1552,0.0172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR39=c(0.0862,0.0086,0.0172,0.1121,0.1207,0.0259,0.0603,0.1121,0.0172,0.0862,0.1121,0.1034,0.0431,
0.0431,0.0172,0.0172,0.0172,0,0,0,0,0,0,0,0,0,0,0),
STR40=c(0.181,0.2759,0.0431,0.4483,0.0431,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR41=c(0.4914,0.1121,0.0172,0.3448,0.0345,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR42=c(0.2586,0.0086,0.0172,0.1724,0.0086,0.1724,0.0172,0.0086,0.2241,0.0086,0.0086,0.0862,0.0086,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
#'
#' @docType data
#' @name an
#' @title Example of an matrix
#' @description Example of matrix containing allele name data on 42 autosomal STR markers
#' @format A data frame with 28 rows and 42 variables
#'
an<-data.frame(STR1=c(9,10,11,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR2=c(12,13,14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR3=c(8,10,11,12,13,14,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR4=c(15,16,17,18,19,20,21,22,23,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR5=c(17,18,19,20,21,22,23,24,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR6=c(8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR7=c(15,17,18,19,20,21,22,23,24,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR8=c(6,7,8,9,10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR9=c(9,10,11,12,13,14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR10=c(9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR11=c(10,11,12,13,14,15,16,17,18,19,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR12=c(12,13,14,15,16,17,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR13=c(9,10,11,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR14=c(7,8,9,10,11,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR15=c(12,12.2,13,13.2,14,14.2,15,15.2,16,16.2,17,17.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR16=c(11,12,13,14,15,16,16.3,17,17.3,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR17=c(9,10,11,12,13,14,15,16,17,18,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR18=c(28,29,30,30.2,31,31.2,32,32.2,33,33.2,34.2,35.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR19=c(10,11,12,12.3,13,13.3,14,14.3,15,15.3,16,16.3,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR20=c(17,18,19,20,21,22,23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR21=c(9,9.1,10,10.1,11,11.3,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR22=c(14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR23=c(13,14,15,16,17,18,19,20,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR24=c(9,10,11,12,13,14,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR25=c(7,9,10,11,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR26=c(10,11,12,13,14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR27=c(8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR28=c(9,10,11,12,13,14,15,17,18,19,20,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR29=c(10,11.2,12,13,14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR30=c(18,19,20,21,22,23,24,25,26,27,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR31=c(18,19,20,21,22,23,24,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR32=c(8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR33=c(17,18,19,20,21,22,23,24,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR34=c(8,10,11,12,13,14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR35=c(14,15,16,17,17.3,18,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR36=c(19,20,21,21.2,22,22.2,23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR37=c(15,16,17,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR38=c(8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR39=c(5,9,10,11,12,13,14,15,15.2,16,17,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,0,0),
STR40=c(6,7,8,9,9.3,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR41=c(8,9,10,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
STR42=c(14,15,16,17,18,19,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
use_data(af,an,overwrite = TRUE)
document()
roxygenise(package.dir = "F:/00forensicgenetics/2022.07.01 R package/KINSIMU",clean = T)
check()
#' @importFrom utils read.csv
NULL
#' @importFrom utils read.csv
roxygenise(package.dir = "F:/00forensicgenetics/2022.07.01 R package/KINSIMU",clean = T)
roxygenise(package.dir = "F:/00forensicgenetics/2022.07.01 R package/KINSIMU",clean = T)
check()
roxygenise(package.dir = "F:/00forensicgenetics/2022.07.01 R package/KINSIMU",clean = T)
build()
install.packages("F:/00forensicgenetics/2022.07.01 R package/KINSIMU_0.1.0.tar.gz", repos = NULL, type = "source")
library(kinship2)
library(devtools)
library(roxygen2)
build()
build()
install.packages("installr")
library(installr)
library(devtools)
check()
check()
.Last.error.trace
copy.packages.between.libraries(from = "C:/Program Files/R/R-4.0.5/library/",to ="C:/Program Files/R/R-4.2.1/library/",ask = T,keep_old = TRUE,do_NOT_override_packages_in_new_R = TRUE)
check()
library(ggpubr)
check()
library(relSim)
edit(readFreqs)
edit(evaluate_panel)
library(KINSIMU)
edit(evaluate_panel)
1<-data.frame(a=c(1,1,1))
ss=100
sample(x = c(-0.5,0.5),size = ss,replace = TRUE,prob = c(0.5,0.5))
edit(sim)
random_name=NA
Father=NA
Father=random_name
Father=NA
Father!=random_name
Father==random_name
if (Father!=random_name) {
a
}else{b}
Father='NA'
if (Father!=random_name) {
a
}else{b}
random_name="NA"
if (Father!=random_name) {
a
}else{b}
testttt<-function(a){
if (a) {
paste("not lazy")
}else{
paste("lazy")
}
}
testttt(a = 1)
testttt()
testttt<-function(a,b){
b^2
if (a) {
paste("not lazy")
}else{
paste("lazy")
}
}
testttt(b = 12)
edit(sim)
testttt<-function(a=FALSE,b){
b^2
if (a) {
paste("not lazy")
}else{
paste("lazy")
}
}
testttt(b = 12)
testttt<-function(a=FALSE){
if (a) {
paste("not lazy")
}else{
paste("lazy")
}
}
testttt()
testttt(1)
ss=1
isFALSE(is.null(ss))
Father=data.class(F=1,M=1)
Father=data.class(F=c(1,1),M=c(1,1))
Father=data.frame(F=c(1,1),M=c(1,1))
Mother=NULL
ss=1
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss)) & ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
ss=nrow(Father)
} else if (is.null(Father)) {
if (ncol(Mother)!=2) {
stop("False in Mother data")
}
}
ss=NULL
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
}
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
paste("Please set a sample size")
}
}
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss)) & ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
ss=nrow(Father)
}
ss=1
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss)) & ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
ss=nrow(Father)
}
Father=NULL
ss=NULL
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
}
Father=data.frame(F=1,M=1)
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss)) & ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
ss=nrow(Father)
}
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss))) {
if (ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
}
ss=nrow(Father)
}
ss=3
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss))) {
if (ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
}
ss=nrow(Father)
}
af<-data.frame(STR1=c(0.4,0.5,0.2))
if (isFALSE(all(apply(af,2,sum)==1))) {
paste("allele frequencies of loci",colnames(af[,which(apply(af,2,sum)!=1)]),"does not equal to 1, there may be some errors in the calculation results of this marker")
}
if (isFALSE(all(apply(af,2,sum)==1))) {
paste("allele frequencies of loci",colnames(af[,which(apply(af,2,sum)!=1)]),"does not equal to 1, there may be some errors in the calculation results of this marker")
}
nl<-ncol(af)
ss=3
if (ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss))) {
if (ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
}
ss=nrow(Father)
}
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss))) {
if (ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
ss=nrow(Fater)
}
} else {
ss=nrow(Father)
}
}
ss=10
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss))) {
if (ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
}
ss=nrow(Father)
}
ss=10
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss))) {
if (ss!=nrow(Father)) {
paste("ss did not equal to number of fathers and was reset")
}
}
ss2=nrow(Father)
}
if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss))) {
if (ss!=nrow(Father)) {
paste0("ss did not equal to number of fathers and was reset")
}
}
ss=nrow(Father)
}
ss=3
if (is.null(Father) & is.null(Mother)) {
if (is.null(ss)) {
stop("Please set a sample size")
}
} else if (is.null(Mother)) {
if (ncol(Father)!=2) {
stop("False in Father data")
}
colnames(Father)=c("F","M")
if (isFALSE(is.null(ss))) {
if (ss!=nrow(Father)) {
print("ss did not equal to number of fathers and was reset")
}
}
ss=nrow(Father)
}
library(roxygen2)
checkCRAN()
remove.packages("KINSIMU")
library(devtools)
check()
.Last.error
devtools::check()
devtools::check()
devtools::build()
install.packages("devtools")
install.packages("roxygen2")
devtools::check()
devtools::build()
devtools::build()
---
output: github_document
<!-- README.md is generated from README.Rmd. Please edit that file -->
```{r, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
out.width = "100%"
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
out.width = "100%"
)
# KINSIMU
<!-- badges: start -->
devtools::check()
devtools::check()
devtools::build()
install.packages(relSim)
install.packages('relSim')
edit(relSim::sim)
library(KINSIMU)
testsimulation(FortytwoSTR$afmatrix,ss = 100,tdelta = c(0,1,0))
devtools::check()
devtools::build()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
install.packages("F:/00forensicgenetics/2022.07.01 R package/KINSIMU_0.1.0.tar.gz", repos = NULL, type = "source")
library(KINSIMU)
detach("package:KINSIMU", unload = TRUE)
install.packages("F:/00forensicgenetics/2022.07.01 R package/KINSIMU_0.1.0.tar.gz", repos = NULL, type = "source")
devtools::check()
devtools::build()
